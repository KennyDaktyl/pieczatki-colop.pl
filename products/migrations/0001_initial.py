# Generated by Django 3.1.7 on 2021-04-06 11:00

from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import products.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(blank=True, default=0, null=True, verbose_name='Numer kategorii')),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='WEBP', keep_meta=True, null=True, quality=100, size=[1280, 960], upload_to='images/categorys/', validators=[products.models.file_size], verbose_name='Zdjęcie główne')),
                ('name', models.CharField(max_length=128, verbose_name='Kategoria główna')),
                ('slug', models.SlugField(blank=True, max_length=128, null=True, verbose_name='Slug')),
                ('is_active', models.BooleanField(default=True, verbose_name='Czy jest dostępny')),
            ],
            options={
                'verbose_name_plural': 'Kategoria główna',
                'ordering': ('number', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Rozmiar produktu (wielkość, pojemność, waga)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Czy jest aktualny')),
            ],
            options={
                'verbose_name_plural': 'Rozmiary produktów',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Nazwa pizzerii')),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='WEBP', keep_meta=True, null=True, quality=100, size=[1280, 960], upload_to='images/workplace/', validators=[products.models.file_size], verbose_name='Zdjęcie główne')),
                ('phone_number', models.CharField(max_length=32, verbose_name='Telefon kontaktowy pizzerii')),
                ('street', models.CharField(max_length=128, verbose_name='Ulica/Osiedle')),
                ('home', models.CharField(max_length=8, verbose_name='Numer domu')),
                ('door', models.CharField(max_length=8, verbose_name='Numer lokalu')),
                ('city', models.CharField(default='Kraków', max_length=64, verbose_name='Miasto')),
                ('post_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='Kod pocztowy')),
                ('info', models.CharField(blank=True, max_length=256, null=True, verbose_name='Info')),
                ('is_active', models.BooleanField(default=True, verbose_name='Czy jest aktywna')),
                ('slug', models.SlugField(blank=True, max_length=128, null=True, verbose_name='Slug')),
                ('google_maps_link', models.TextField(blank=True, null=True, verbose_name='Link z mapy google')),
                ('facebook_link', models.URLField(blank=True, null=True, verbose_name='Link do facebook')),
            ],
            options={
                'verbose_name_plural': 'Magazyn',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Vat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(verbose_name='Stawka VAT')),
                ('is_active', models.BooleanField(default=True, verbose_name='Czy jest dostępny')),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Nazwa produktu')),
                ('qty', models.IntegerField(default=1, verbose_name='Ilość produktu na stanie')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='Produkt info')),
                ('slug', models.SlugField(blank=True, max_length=128, null=True, verbose_name='Slug')),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='WEBP', keep_meta=True, null=True, quality=100, size=[1280, 960], upload_to='images/products/', validators=[products.models.file_size], verbose_name='Zdjęcie główne')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=7, verbose_name='Cena podstawowa')),
                ('is_active', models.BooleanField(default=True, verbose_name='Czy jest dostępny')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.category', verbose_name='Podkategoria produktu')),
                ('size', models.ManyToManyField(blank=True, to='products.Size', verbose_name='Rozmiar')),
                ('store_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='products.store', verbose_name='Magazyn')),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.vat', verbose_name='Stawka VAT')),
            ],
            options={
                'verbose_name_plural': 'Produkty',
                'ordering': ('name',),
            },
        ),
    ]
